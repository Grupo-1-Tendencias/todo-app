# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  slack: circleci/slack@4.1.4

aliases:
  - &restore-yarn-cache
    name: Restore yarnpkg cache
    keys:
      - yarn-packages-{{ checksum "yarn.lock" }}
      - yarn-packages-

  - &save-yarn-cache
    name: Save yarnpkg cache
    paths:
      - ~/.cache/yarn
    key: yarn-packages-{{ checksum "yarn.lock" }}

  - &install-yarn sudo npm install --global --force yarn@1.22.4

  - &filter-master-only
    branches:
      only:
        - master

executors:
  default-executor:
    docker:
      - image: circleci/node:12.16.1
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
        environment:
          AWS-REGION: us-east-2

jobs:
  check-format:
    executor: default-executor
    steps:
      - checkout
      - run: *install-yarn
      - attach_workspace: { at: "." }
      - run: yarn prettier --check .

  checkout-code:
    executor: default-executor
    steps:
      - checkout
      - restore_cache: *restore-yarn-cache
      - run: yarn install --non-interactive --cache-folder ~/.cache/yarn
      - run:
          name: Check if yarn.lock changed during install
          command: git diff --exit-code yarn.lock
      - save_cache: *save-yarn-cache
      - persist_to_workspace:
          root: "."
          paths: [node_modules]
      - slack/notify:
          event: fail
          mentions: "@EngineeringTeam"
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1

  build:
    executor: default-executor
    steps:
      - checkout
      - restore_cache: *restore-yarn-cache
      - run: *install-yarn
      - save_cache: *save-yarn-cache
      - attach_workspace: { at: "." }
      - run: yarn build

  lint:
    executor: default-executor
    steps:
      - checkout
      - restore_cache: *restore-yarn-cache
      - run: *install-yarn
      - save_cache: *save-yarn-cache
      - attach_workspace: { at: "." }
      - run: yarn lint

  run-app-tests:
    executor: default-executor
    steps:
      - checkout
      - restore_cache: *restore-yarn-cache
      - run: *install-yarn
      - save_cache: *save-yarn-cache
      - attach_workspace: { at: "." }
      - run: CI=true yarn test

  notify:
    executor: default-executor
    steps:
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1

# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  todo-app:
    # Run the welcome/run job in its own container
    jobs:
      - checkout-code:
          context: slack-secrets
      - check-format:
          requires: [checkout-code]
      - build:
          requires: [check-format]
      - lint:
          requires: [check-format]
      - run-app-tests:
          requires: [build]
      - notify:
          requires: [run-app-tests, build]
          context: slack-secrets

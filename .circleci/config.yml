# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  slack: circleci/slack@4.1.4

aliases:
  - &restore-node-modules-cache
    name: Restore node_modules cache
    key: v1-yarn-deps-10122020-{{ checksum "yarn.lock" }}

  - &restore-yarn-cache
    name: Restore yarnpkg cache
    key: v1-yarn-10122020-cache

  - &save-node-modules-cache
    name: Save node_modules cache
    paths:
      - node_modules
    key: v1-yarn-deps-10122020-{{ checksum "yarn.lock" }}

  - &save-yarn-cache
    name: Save yarnpkg cache
    paths:
      - ~/.cache/yarn
    key: v1-yarn-cache-10122020

  - &install-yarn sudo npm install --global --force yarn@1.22.4

  - &filter-master-only
    branches:
      only:
        - master

executors:
  default-executor:
    docker:
      - image: circleci/node:12.16.1
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
        environment:
            AWS-REGION: us-east-2

jobs:
  checkout-code:
    executor: default-executor
    steps:
      - run: echo "deploy my app"
      - slack/notify:
          event: fail
          mentions: '@EngineeringTeam'
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1

  compile-app:
    executor: default-executor
    steps:
      - checkout
      - run: *install-yarn
      - restore_cache: *restore-node-modules-cache
      - run: yarn compile
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1

  build:
    executor: default-executor
    steps:
      - checkout
      - run: *install-yarn
      - restore_cache: *restore-node-modules-cache
      - run: yarn build
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1

  lint:
    executor: default-executor
    steps:
      - checkout
      - run: *install-yarn
      - restore_cache: *restore-node-modules-cache
      - run: yarn lint
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1
  
  run-app-tests:
    executor: default-executor
    steps:
      - checkout
      - run: *install-yarn
      - restore_cache: *restore-node-modules-cache
      - run: yarn test --forceExit --maxWorkers=2
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1

# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  todo-app:
    # Run the welcome/run job in its own container
    jobs:
      - slack/on-hold:
          context: slack-secrets
      - checkout-code
      - build:
          requires: [checkout-code]
      - lint:
          requires: [checkout-code]
      - compile-app:
          requires: [build]
      - run-app-tests:
          requires: [build]

# workflows:
#   todo-app:
#     jobs:
#       - test
#       - slack/on-hold:
#           context: slack-secrets
#           filters:
#             tags:
#               only: /^v.*/
#           requires:
#             - test
#       - pause_workflow:
#           filters:
#             tags:
#               only: /^v.*/
#           requires:
#             - test
#             - slack/on-hold
#           type: approval
#       - checkout-code:
#           filters:
#             tags:
#               only: /^v.*/
#           requires:
#             - pause_workflow